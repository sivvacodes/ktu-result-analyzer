{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\result-analyzer\\\\frontend\\\\src\\\\components\\\\AnalyticsCharts.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#2563eb', '#16a34a', '#dc2626', '#eab308', '#8b5cf6'];\nexport const GradeDistributionChart = ({\n  data\n}) => {\n  const chartData = Object.entries(data).map(([grade, count]) => ({\n    grade,\n    count\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        fill: \"#2563eb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = GradeDistributionChart;\nexport const PassFailPieChart = ({\n  passCount,\n  failCount\n}) => {\n  const data = [{\n    name: 'Pass',\n    value: passCount\n  }, {\n    name: 'Fail',\n    value: failCount\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        label: ({\n          name,\n          percent\n        }) => `${name} ${(percent * 100).toFixed(0)}%`,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PassFailPieChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"GradeDistributionChart\");\n$RefreshReg$(_c2, \"PassFailPieChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","PieChart","Pie","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","GradeDistributionChart","data","chartData","Object","entries","map","grade","count","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","fill","_c","PassFailPieChart","passCount","failCount","name","value","cx","cy","labelLine","label","percent","toFixed","outerRadius","entry","index","length","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/result-analyzer/frontend/src/components/AnalyticsCharts.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n  PieChart, Pie, Cell,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst COLORS = ['#2563eb', '#16a34a', '#dc2626', '#eab308', '#8b5cf6'];\r\n\r\nexport const GradeDistributionChart = ({ data }) => {\r\n  const chartData = Object.entries(data).map(([grade, count]) => ({\r\n    grade,\r\n    count\r\n  }));\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <BarChart data={chartData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"grade\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"count\" fill=\"#2563eb\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport const PassFailPieChart = ({ passCount, failCount }) => {\r\n  const data = [\r\n    { name: 'Pass', value: passCount },\r\n    { name: 'Fail', value: failCount }\r\n  ];\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          labelLine={false}\r\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}